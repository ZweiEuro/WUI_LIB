#final Cmake file for the finished build

target_link_directories(${PROJECT_NAME} PUBLIC .)
target_link_libraries(${PROJECT_NAME} PUBLIC wui cefdll_wrapper cef EGL vk_swiftshader vulkan)
target_include_directories(${PROJECT_NAME} PRIVATE include)


function(cef_copy_dependencies target libPath)

    if(NOT EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/${libPath}") 
        message(FATAL_ERROR "CEF library path does not exist: ${libPath}")
    endif()


    add_custom_command(TARGET ${target} POST_BUILD
        COMMENT "Copy CEF dependencies"
        COMMAND ${CMAKE_COMMAND} -E copy_if_different
            ${CMAKE_CURRENT_SOURCE_DIR}/${libPath}/chrome_100_percent.pak
            ${CMAKE_CURRENT_SOURCE_DIR}/${libPath}/chrome_200_percent.pak
            ${CMAKE_CURRENT_SOURCE_DIR}/${libPath}/chrome-sandbox
            ${CMAKE_CURRENT_SOURCE_DIR}/${libPath}/icudtl.dat
            ${CMAKE_CURRENT_SOURCE_DIR}/${libPath}/libcefdll_wrapper.a
            ${CMAKE_CURRENT_SOURCE_DIR}/${libPath}/libcef.so
            ${CMAKE_CURRENT_SOURCE_DIR}/${libPath}/libEGL.so
            ${CMAKE_CURRENT_SOURCE_DIR}/${libPath}/libGLESv2.so
            ${CMAKE_CURRENT_SOURCE_DIR}/${libPath}/libvk_swiftshader.so
            ${CMAKE_CURRENT_SOURCE_DIR}/${libPath}/libvulkan.so.1
            ${CMAKE_CURRENT_SOURCE_DIR}/${libPath}/libwui.a
            ${CMAKE_CURRENT_SOURCE_DIR}/${libPath}/resources.pak
            ${CMAKE_CURRENT_SOURCE_DIR}/${libPath}/snapshot_blob.bin
            ${CMAKE_CURRENT_SOURCE_DIR}/${libPath}/v8_context_snapshot.bin
            ${CMAKE_CURRENT_SOURCE_DIR}/${libPath}/vk_swiftshader_icd.json
            ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}

        COMMAND ${CMAKE_COMMAND} -E make_directory
            ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/locales
        COMMAND ${CMAKE_COMMAND} -E copy_if_different
            ${CMAKE_CURRENT_SOURCE_DIR}/${libPath}/locales/*
            ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/locales
    )

endfunction()



#Helper function to copy html files for the ui over to the exe
function(cef_copy_ui_files path)
    file(GLOB_RECURSE files RELATIVE "${CMAKE_CURRENT_SOURCE_DIR}" "${path}/*")
    foreach(file ${files})
        if(NOT IS_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/${file}")
            configure_file("${CMAKE_CURRENT_SOURCE_DIR}/${file}" "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${file}" COPYONLY)
        endif()
    endforeach()
endfunction()